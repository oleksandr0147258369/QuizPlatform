@using Quizzy.Models.Tests
@model RunHomeworkTestViewModel
@{
    ViewData["Title"] = "Test Run";
    Layout = "_Layout";
    ViewData["HasHeader"] = false;
    ViewData["HasFooter"] = false;
    ViewData["stylesheet"] = "Run/TestRun.css";
}

<h1 id = "QCount" style = "margin: 50px"></h1>

<div class="container" id="question-container" >
    <div style = "position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%);">Loading...</div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const code = "@Model.Code";
        const sessionIdKey = "sessionId_" + code;

// Спроба взяти SessionId з localStorage
        let sessionId = localStorage.getItem(sessionIdKey);
        if (!sessionId) {
            sessionId = "@Model.SessionId";
            localStorage.setItem(sessionIdKey, sessionId);
        }

        let currentIndex = parseInt(localStorage.getItem("currentIndex_" + code)) || 0;

        const totalCount = @Model.Questions.Count;
        const container = document.getElementById("question-container");




        function renderQuestion(data) {
            container.innerHTML = `
        <div class="question-card">
            <div class="question"><h2>${data.text}</h2></div>
            <div class="answers">
                ${data.answers.map(answer => `
                    <label class="answer-option">
                        <input type="${data.hasMultipleCorrect ? 'checkbox' : 'radio'}" name="selectedAnswers" value="${answer.answerId}" />
                        ${answer.text}
                    </label>
                `).join('')}
            </div>
         <button class="answer-btn submit-answer">Continue</button>
            </div>
    `;



            document.querySelector(".submit-answer").addEventListener("click", () => {
                const selected = [...container.querySelectorAll('input[name="selectedAnswers"]:checked')];
                if (selected.length === 0) {
                    alert("Виберіть хоча б одну відповідь!");
                    return;
                }

                const answers = selected.map(cb => cb.value);
                fetch("/Run/SubmitAnswer", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({
                        code: code,
                        questionIndex: currentIndex,
                        answerIds: answers,
                        SesId: sessionId
                    })
                }).then(res => {
                    currentIndex++;
                    localStorage.setItem("currentIndex_" + code, currentIndex);
                    loadQuestion();
                });
            });
            const countElem = document.getElementById("QCount");
            countElem.innerHTML = `${currentIndex + 1} / ${totalCount}`;
        }

        function loadQuestion() {


            if (currentIndex >= totalCount) {
                fetch("/Run/Result", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ sesId: sessionId })
                })
                    .then(resultResponse => {
                        if (resultResponse.redirected) {
                            window.location.href = resultResponse.url;
                        } else {
                            window.location.href = "/Run/ShowResult";
                        }
                    });
                localStorage.removeItem("currentIndex_" + code);
                localStorage.removeItem(sessionIdKey);


                return;
            }

            // ❗️ Якщо ще є питання — запитуємо
            fetch("/Run/GetQuestion", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ code: code, index: currentIndex })
            }).then(async res => {
                if (!res.ok) {
                    alert("Error");
                    localStorage.removeItem("currentIndex_" + code);
                    window.location.href = "/";
                    return;
                }

                const data = await res.json();
                renderQuestion(data);
            });
        }


        loadQuestion();
    });
</script>